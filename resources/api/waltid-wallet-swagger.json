{
  "openapi" : "3.1.0",
  "info" : {
    "title" : "walt.id wallet",
    "description" : "Interact with the walt.id wallet. Version is reported to be [latest] and this service instance was started 2024-11-24T18:36:16Z.<br/>Questions about anything here? Visit <a href='https://github.com/walt-id/#join-the-community'>support</a>.<br/><br/>Any HTTP status code of 200 - 299 indicates request success, 400 - 499 client error / invalid request, 500+ internal server processing exception.",
    "contact" : {
      "name" : "walt.id",
      "url" : "https://walt.id",
      "email" : "office@walt.id"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "[latest]"
  },
  "externalDocs" : {
    "description" : "docs.walt.id",
    "url" : "https://docs.walt.id"
  },
  "servers" : [ {
    "url" : "/",
    "description" : "Development Server"
  } ],
  "tags" : [ ],
  "paths" : {
    "/features/registered" : {
      "get" : {
        "tags" : [ "Feature management" ],
        "summary" : "List registered features",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Map<String,String>",
                  "type" : "object",
                  "additionalProperties" : {
                    "title" : "String",
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/features/state" : {
      "get" : {
        "tags" : [ "Feature management" ],
        "summary" : "Show state of features",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/id.walt.commons.web.modules.FeatureFlagInformationModule.FeatureFlagInformations"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/livez" : {
      "get" : {
        "tags" : [ ],
        "parameters" : [ ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Redirect to swagger interface for API documentation",
        "parameters" : [ ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/wallet-api/auth/user-info" : {
      "get" : {
        "tags" : [ "Authentication" ],
        "summary" : "Return user ID if logged in",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/id.walt.webwallet.db.models.Account"
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/auth/session" : {
      "get" : {
        "tags" : [ "Authentication" ],
        "summary" : "Return session ID if logged in",
        "parameters" : [ ],
        "responses" : {
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/auth/register" : {
      "post" : {
        "tags" : [ "Authentication" ],
        "summary" : "Register with [email + password] or [wallet address + ecosystem]",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/id.walt.webwallet.web.model.AccountRequest"
              },
              "examples" : {
                "E-mail + password" : {
                  "value" : "{\"type\":\"email\",\"name\":\"Max Mustermann\",\"email\":\"user@email.com\",\"password\":\"password\"}"
                },
                "Wallet address + ecosystem" : {
                  "value" : "{\"type\":\"address\",\"address\":\"0xABC\",\"ecosystem\":\"ecosystem\"}"
                },
                "OIDC" : {
                  "value" : "{\"type\":\"oidc\",\"token\":\"ey...\"}"
                },
                "OIDC Unique Subject" : {
                  "value" : "{\"type\":\"oidc-unique-subject\",\"token\":\"ey...\"}"
                },
                "Keycloak" : {
                  "value" : "{\"type\":\"keycloak\"}"
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Registration succeeded ",
            "headers" : { }
          },
          "400" : {
            "description" : "Registration failed",
            "headers" : { }
          },
          "409" : {
            "description" : "Account already exists!",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/auth/login" : {
      "post" : {
        "tags" : [ "Authentication" ],
        "summary" : "Login with [email + password] or [wallet address + ecosystem] or [oidc session]",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/id.walt.webwallet.web.model.AccountRequest"
              },
              "examples" : {
                "E-mail + password" : {
                  "value" : "{\"type\":\"email\",\"email\":\"user@email.com\",\"password\":\"password\"}"
                },
                "Wallet address + ecosystem" : {
                  "value" : "{\"type\":\"address\",\"address\":\"0xABC\",\"ecosystem\":\"ecosystem\"}"
                },
                "OIDC" : {
                  "value" : "{\"type\":\"oidc\",\"token\":\"ey...\"}"
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Login successful",
            "headers" : { }
          },
          "401" : {
            "description" : "Login failed",
            "headers" : { }
          },
          "400" : {
            "description" : "Login failed",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/auth/logout" : {
      "post" : {
        "tags" : [ "Authentication" ],
        "summary" : "Logout (delete session)",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Logged out.",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/auth/keycloak/token" : {
      "get" : {
        "tags" : [ "Keycloak Authentication" ],
        "summary" : "Returns Keycloak access token",
        "description" : "Returns a access token to be used for all further operations towards Keycloak. Required Keycloak configuration in oidc.conf.",
        "parameters" : [ ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/wallet-api/auth/keycloak/login" : {
      "post" : {
        "tags" : [ "Keycloak Authentication" ],
        "summary" : "Keycloak login with [username + password]",
        "description" : "Login of a user managed by Keycloak.",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/id.walt.webwallet.web.model.AccountRequest"
              },
              "examples" : {
                "Keycloak username + password" : {
                  "value" : "{\"type\":\"keycloak\",\"username\":\"Max_Mustermann\",\"password\":\"password\"}"
                },
                "Keycloak username + Access Token " : {
                  "value" : "{\"type\":\"keycloak\",\"username\":\"Max_Mustermann\",\"token\":\"eyJhb...\"}"
                },
                "Keycloak user Access Token " : {
                  "value" : "{\"type\":\"keycloak\",\"token\":\"eyJhb...\"}"
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Login successful",
            "headers" : { }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : { }
          },
          "400" : {
            "description" : "Bad request",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/auth/keycloak/create" : {
      "post" : {
        "tags" : [ "Keycloak Authentication" ],
        "summary" : "Keycloak registration with [username + email + password]",
        "description" : "Creates a user in the configured Keycloak instance.",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/id.walt.webwallet.web.model.AccountRequest"
              },
              "examples" : {
                "username + email + password" : {
                  "value" : "{\"type\":\"keycloak\",\"email\":\"user@email.com\",\"username\":\"Max_Mustermann\",\"password\":\"password\",\"token\":\"eyJhb...\"}"
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Registration succeeded ",
            "headers" : { }
          },
          "400" : {
            "description" : "Registration failed",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/auth/keycloak/logout" : {
      "post" : {
        "tags" : [ "Keycloak Authentication" ],
        "summary" : "Logout via Keycloak provider.",
        "description" : "Terminates Keycloak and wallet session by the user identified by the Keycloak user ID.",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/id.walt.webwallet.web.model.KeycloakLogoutRequest"
              },
              "examples" : {
                "keycloakUserId + token" : {
                  "value" : "{\"keycloakUserId\":\"3d09 ...\",\"token\":\"eyJhb ...\"}"
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Keycloak HTTP status code.",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/accounts/wallets" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Get wallets associated with account",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/id.walt.webwallet.db.models.AccountWalletListing"
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/keys" : {
      "get" : {
        "tags" : [ "Keys" ],
        "summary" : "List Keys",
        "parameters" : [ {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of (key) strings",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "List<String>",
                  "type" : "array",
                  "items" : {
                    "title" : "String",
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/keys/generate" : {
      "post" : {
        "tags" : [ "Keys" ],
        "summary" : "Generate new key",
        "parameters" : [ {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Key configuration (JSON)",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/id.walt.crypto.keys.KeyGenerationRequest"
              },
              "examples" : {
                "JWK key generation request" : {
                  "value" : "{\"backend\":\"jwk\",\"keyType\":\"Ed25519\"}"
                },
                "TSE key generation request" : {
                  "value" : "{\"backend\":\"tse\",\"keyType\":\"Ed25519\",\"config\":{\"server\":\"http://0.0.0.0:8200/v1/transit\",\"accessKey\":\"dev-only-token\"}}"
                },
                "OCI key generation request" : {
                  "value" : "{\"backend\":\"oci\",\"keyType\":\"secp256r1\",\"config\":{\"vaultId\":\"ocid1.vault.oc1.eu-frankfurt-1.entbf645aabf2.abtheljshkb6dsuldqf324kitneb63vkz3dfd74dtqvkd5j2l2cxwyvmefeq\",\"compartmentId\":\"ocid1.compartment.oc1..aaaaaaaawirugoz35riiybcxsvf7bmelqsxo3sajaav5w3i2vqowcwqrllxa\"}}"
                },
                "OCI API key generation request" : {
                  "value" : "{\"backend\":\"oci-rest-api\",\"keyType\":\"secp256r1\",\"config\":{\"tenancyOcid\":\"ocid1.tenancy.oc1..aaaaaaaaiijfupfvsqwqwgupzdy5yclfzcccmie4ktp2wlgslftv5j7xpk6q\",\"compartmentOcid\":\"ocid1.tenancy.oc1..aaaaaaaaiijfupfvsqwqwgupzdy5yclfzcccmie4ktp2wlgslftv5j7xpk6q\",\"userOcid\":\"ocid1.user.oc1..aaaaaaaaxjkkfjqxdqk7ldfjrxjmacmbi7sci73rbfiwpioehikavpbtqx5q\",\"fingerprint\":\"bb:d4:4b:0c:c8:3a:49:15:7f:87:55:d5:2b:7e:dd:bc\",\"cryptoEndpoint\":\"entcvrlraabc4-crypto.kms.eu-frankfurt-1.oraclecloud.com\",\"managementEndpoint\":\"entcvrlraabc4-management.kms.eu-frankfurt-1.oraclecloud.com\",\"signingKeyPem\":\"privateKey\"}}"
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/keys/import" : {
      "post" : {
        "tags" : [ "Keys" ],
        "summary" : "Import an existing key",
        "parameters" : [ {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Key in JWK or PEM format",
          "content" : {
            "text/plain" : {
              "schema" : {
                "title" : "String",
                "type" : "string"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/keys/{keyId}/load" : {
      "get" : {
        "tags" : [ "Keys" ],
        "summary" : "Show a specific key",
        "parameters" : [ {
          "name" : "keyId",
          "in" : "path",
          "description" : "the key id (or alias)",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          },
          "example" : "bc6fa6b0593648238c4616800bed7746"
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The key document (JSON)",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "JsonObject",
                  "type" : "object",
                  "additionalProperties" : {
                    "title" : "*",
                    "type" : "object"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/keys/{keyId}/meta" : {
      "get" : {
        "tags" : [ "Keys" ],
        "summary" : "Show a specific key meta info",
        "parameters" : [ {
          "name" : "keyId",
          "in" : "path",
          "description" : "the key id (or alias)",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          },
          "example" : "bc6fa6b0593648238c4616800bed7746"
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The key document (JSON)",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "JsonObject",
                  "type" : "object",
                  "additionalProperties" : {
                    "title" : "*",
                    "type" : "object"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/keys/{keyId}/export" : {
      "get" : {
        "tags" : [ "Keys" ],
        "summary" : "Load a specific key",
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Select format to export the key, e.g. 'JWK' / 'PEM'. JWK by default.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          },
          "example" : "PEM"
        }, {
          "name" : "loadPrivateKey",
          "in" : "query",
          "description" : "Select if the secret private key should be loaded - take special care in this case! False by default.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "Boolean",
            "type" : "boolean"
          }
        }, {
          "name" : "keyId",
          "in" : "path",
          "description" : "the key id (or alias)",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          },
          "example" : "bc6fa6b0593648238c4616800bed7746"
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/keys/{keyId}" : {
      "delete" : {
        "tags" : [ "Keys" ],
        "summary" : "Delete a specific key",
        "parameters" : [ {
          "name" : "keyId",
          "in" : "path",
          "description" : "the key id (or alias)",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          },
          "example" : "bc6fa6b0593648238c4616800bed7746"
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Key deleted",
            "headers" : { }
          },
          "400" : {
            "description" : "Key could not be deleted",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/dids" : {
      "get" : {
        "tags" : [ "DIDs" ],
        "summary" : "List DIDs",
        "parameters" : [ {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of (DID) strings",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "List<WalletDid>",
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/id.walt.webwallet.db.models.WalletDid"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/dids/{did}" : {
      "get" : {
        "tags" : [ "DIDs" ],
        "summary" : "Show a specific DID",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The DID",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          },
          "example" : "did:web:walt.id"
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The DID document",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "JsonObject",
                  "type" : "object",
                  "additionalProperties" : {
                    "title" : "*",
                    "type" : "object"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "DIDs" ],
        "summary" : "Delete a specific DID",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The DID",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          },
          "example" : "did:web:walt.id"
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "DID deleted",
            "headers" : { }
          },
          "400" : {
            "description" : "DID could not be deleted",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/dids/default" : {
      "post" : {
        "tags" : [ "DIDs" ],
        "summary" : "Set the default DID",
        "description" : "Set the default DID (which is e.g. preselected in DID selection dropdown at presentation modal)",
        "parameters" : [ {
          "name" : "did",
          "in" : "query",
          "description" : "DID to set as default DID",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          },
          "example" : "did:web:walt.id"
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Default DID updated",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/dids/create/key" : {
      "post" : {
        "tags" : [ "DIDs" ],
        "summary" : "Create a did:key",
        "parameters" : [ {
          "name" : "useJwkJcsPub",
          "in" : "query",
          "description" : "Optionally set JWK JCS Pub format (for e.g. EBSI)",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "Boolean",
            "type" : "boolean"
          }
        }, {
          "name" : "keyId",
          "in" : "query",
          "description" : "Optionally override a key ID to use (otherwise will generate a new one if not present)",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        }, {
          "name" : "alias",
          "in" : "query",
          "description" : "Optionally set key alias (otherwise will use hash of key if not present)",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "DID created",
            "headers" : { }
          },
          "409" : {
            "description" : "DID already exists",
            "headers" : { }
          },
          "400" : {
            "description" : "DID could not be created",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/dids/create/jwk" : {
      "post" : {
        "tags" : [ "DIDs" ],
        "summary" : "Create a did:jwk",
        "parameters" : [ {
          "name" : "keyId",
          "in" : "query",
          "description" : "Optionally override a key ID to use (otherwise will generate a new one if not present)",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        }, {
          "name" : "alias",
          "in" : "query",
          "description" : "Optionally set key alias (otherwise will use hash of key if not present)",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "DID created",
            "headers" : { }
          },
          "409" : {
            "description" : "DID already exists",
            "headers" : { }
          },
          "400" : {
            "description" : "DID could not be created",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/dids/create/web" : {
      "post" : {
        "tags" : [ "DIDs" ],
        "summary" : "Create a did:web",
        "parameters" : [ {
          "name" : "domain",
          "in" : "query",
          "description" : "Domain to use to host did:web document at",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        }, {
          "name" : "path",
          "in" : "query",
          "description" : "Path to host the did:web document at. Starting with a: \"/\"",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        }, {
          "name" : "keyId",
          "in" : "query",
          "description" : "Optionally override a key ID to use (otherwise will generate a new one if not present)",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        }, {
          "name" : "alias",
          "in" : "query",
          "description" : "Optionally set key alias (otherwise will use hash of key if not present)",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "DID created",
            "headers" : { }
          },
          "409" : {
            "description" : "DID already exists",
            "headers" : { }
          },
          "400" : {
            "description" : "DID could not be created",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/dids/create/ebsi" : {
      "post" : {
        "tags" : [ "DIDs" ],
        "summary" : "Create a did:ebsi",
        "parameters" : [ {
          "name" : "version",
          "in" : "query",
          "description" : "Version 2 (NaturalPerson) or 1 (LegalEntity)",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "Int",
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "bearerToken",
          "in" : "query",
          "description" : "Required for v1 (LegalEntity)",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        }, {
          "name" : "keyId",
          "in" : "query",
          "description" : "Optionally override a key ID to use (otherwise will generate a new one if not present)",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        }, {
          "name" : "alias",
          "in" : "query",
          "description" : "Optionally set key alias (otherwise will use hash of key if not present)",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "DID created",
            "headers" : { }
          },
          "409" : {
            "description" : "DID already exists",
            "headers" : { }
          },
          "400" : {
            "description" : "DID could not be created",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/dids/create/cheqd" : {
      "post" : {
        "tags" : [ "DIDs" ],
        "summary" : "Create a did:cheqd",
        "parameters" : [ {
          "name" : "network",
          "in" : "query",
          "description" : "testnet or mainnet",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        }, {
          "name" : "keyId",
          "in" : "query",
          "description" : "Optionally override a key ID to use (otherwise will generate a new one if not present)",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        }, {
          "name" : "alias",
          "in" : "query",
          "description" : "Optionally set key alias (otherwise will use hash of key if not present)",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "DID created",
            "headers" : { }
          },
          "409" : {
            "description" : "DID already exists",
            "headers" : { }
          },
          "400" : {
            "description" : "DID could not be created",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/dids/create/iota" : {
      "post" : {
        "tags" : [ "DIDs" ],
        "summary" : "Create a did:iota",
        "parameters" : [ {
          "name" : "keyId",
          "in" : "query",
          "description" : "Optionally override a key ID to use (otherwise will generate a new one if not present)",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        }, {
          "name" : "alias",
          "in" : "query",
          "description" : "Optionally set key alias (otherwise will use hash of key if not present)",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "DID created",
            "headers" : { }
          },
          "409" : {
            "description" : "DID already exists",
            "headers" : { }
          },
          "400" : {
            "description" : "DID could not be created",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/credentials" : {
      "get" : {
        "tags" : [ "WalletCredentials" ],
        "summary" : "List credentials",
        "parameters" : [ {
          "name" : "category",
          "in" : "query",
          "description" : "list of category names",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "List<String>",
            "type" : "array",
            "items" : {
              "title" : "String",
              "type" : "string"
            }
          }
        }, {
          "name" : "showDeleted",
          "in" : "query",
          "description" : "include the deleted credentials in the query result",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "Boolean",
            "type" : "boolean"
          }
        }, {
          "name" : "showPending",
          "in" : "query",
          "description" : "include the pending credentials in the query result",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "Boolean",
            "type" : "boolean"
          }
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "The property to sort by",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          },
          "example" : "addedOn"
        }, {
          "name" : "descending",
          "in" : "query",
          "description" : "Sort descending",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "Boolean",
            "type" : "boolean"
          }
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of (verifiable credentials) JSON documents",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "List<WalletCredential>",
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/id.walt.webwallet.db.models.WalletCredential"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "WalletCredentials" ],
        "summary" : "Store credential",
        "parameters" : [ {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/credentials/{credentialId}" : {
      "get" : {
        "tags" : [ "WalletCredentials" ],
        "summary" : "View a credential",
        "parameters" : [ {
          "name" : "credentialId",
          "in" : "path",
          "description" : "the credential id (or alias)",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          },
          "example" : "urn:uuid:d36986f1-3cc0-4156-b5a4-6d3deab84270"
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/id.walt.webwallet.db.models.WalletCredential"
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "WalletCredentials" ],
        "summary" : "Delete a credential",
        "parameters" : [ {
          "name" : "permanent",
          "in" : "query",
          "description" : "Permanently delete the credential",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "Boolean",
            "type" : "boolean"
          }
        }, {
          "name" : "credentialId",
          "in" : "path",
          "description" : "the credential id (or alias)",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          },
          "example" : "urn:uuid:d36986f1-3cc0-4156-b5a4-6d3deab84270"
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "WalletCredential deleted",
            "headers" : { }
          },
          "400" : {
            "description" : "WalletCredential could not be deleted",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/credentials/{credentialId}/restore" : {
      "post" : {
        "tags" : [ "WalletCredentials" ],
        "summary" : "Attempt to restore a soft delete credential",
        "parameters" : [ {
          "name" : "credentialId",
          "in" : "path",
          "description" : "the credential id (or alias)",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          },
          "example" : "urn:uuid:d36986f1-3cc0-4156-b5a4-6d3deab84270"
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/id.walt.webwallet.db.models.WalletCredential"
                }
              }
            }
          },
          "400" : {
            "description" : "WalletCredential could not be restored",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/credentials/{credentialId}/accept" : {
      "post" : {
        "tags" : [ "WalletCredentials" ],
        "summary" : "Accept credential",
        "parameters" : [ {
          "name" : "credentialId",
          "in" : "path",
          "description" : "the credential id (or alias)",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          },
          "example" : "urn:uuid:d36986f1-3cc0-4156-b5a4-6d3deab84270"
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Credential accepted successfully",
            "headers" : { }
          },
          "400" : {
            "description" : "Credential acceptance failed",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/credentials/{credentialId}/reject" : {
      "post" : {
        "tags" : [ "WalletCredentials" ],
        "summary" : "Reject credential",
        "parameters" : [ {
          "name" : "credentialId",
          "in" : "path",
          "description" : "the credential id (or alias)",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          },
          "example" : "urn:uuid:d36986f1-3cc0-4156-b5a4-6d3deab84270"
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/id.walt.webwallet.web.parameter.NoteRequestParameter"
              },
              "examples" : {
                "Note" : {
                  "value" : "{\"note\":\"note\"}"
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "202" : {
            "description" : "Credential rejected successfully",
            "headers" : { }
          },
          "400" : {
            "description" : "Credential rejection failed",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/credentials/{credentialId}/status" : {
      "get" : {
        "tags" : [ "WalletCredentials" ],
        "summary" : "Get credential status",
        "parameters" : [ {
          "name" : "credentialId",
          "in" : "path",
          "description" : "the credential id (or alias)",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          },
          "example" : "urn:uuid:d36986f1-3cc0-4156-b5a4-6d3deab84270"
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of credential statuses",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "List<CredentialStatusResult>",
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/id.walt.webwallet.usecase.credential.CredentialStatusResult"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Credential status could not be established or an error occured",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/credentials/{credentialId}/category" : {
      "put" : {
        "tags" : [ "WalletCredentials" ],
        "summary" : "Attach category to a credential",
        "parameters" : [ {
          "name" : "credentialId",
          "in" : "path",
          "description" : "the credential id (or alias)",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          },
          "example" : "urn:uuid:d36986f1-3cc0-4156-b5a4-6d3deab84270"
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The list of category names",
          "content" : {
            "application/json" : {
              "schema" : {
                "title" : "List<String>",
                "type" : "array",
                "items" : {
                  "title" : "String",
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "WalletCredential category added",
            "headers" : { }
          },
          "400" : {
            "description" : "WalletCredential category could not be added",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "WalletCredentials" ],
        "summary" : "Detach category from credential",
        "parameters" : [ {
          "name" : "credentialId",
          "in" : "path",
          "description" : "the credential id (or alias)",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          },
          "example" : "urn:uuid:d36986f1-3cc0-4156-b5a4-6d3deab84270"
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The list of category names",
          "content" : {
            "application/json" : {
              "schema" : {
                "title" : "List<String>",
                "type" : "array",
                "items" : {
                  "title" : "String",
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "WalletCredential category deleted",
            "headers" : { }
          },
          "400" : {
            "description" : "WalletCredential category could not be deleted",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/exchange/useOfferRequest" : {
      "post" : {
        "tags" : [ "Credential exchange" ],
        "summary" : "Claim credential(s) from an issuer",
        "parameters" : [ {
          "name" : "did",
          "in" : "query",
          "description" : "The DID to issue the credential(s) to",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        }, {
          "name" : "requireUserInput",
          "in" : "query",
          "description" : "Whether to claim as pending acceptance",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "Boolean",
            "type" : "boolean"
          }
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The offer request to use",
          "content" : {
            "text/plain" : {
              "schema" : {
                "title" : "String",
                "type" : "string"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "List<WalletCredential>",
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/id.walt.webwallet.db.models.WalletCredential"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/exchange/matchCredentialsForPresentationDefinition" : {
      "post" : {
        "tags" : [ "Credential exchange" ],
        "summary" : "Returns the credentials stored in the wallet that match the passed presentation definition",
        "parameters" : [ {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Presentation definition to match credentials against",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/id.walt.oid4vc.data.dif.PresentationDefinition"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "List<JsonObject>",
                  "type" : "array",
                  "items" : {
                    "title" : "JsonObject",
                    "type" : "object",
                    "additionalProperties" : {
                      "title" : "*",
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/exchange/unmatchedCredentialsForPresentationDefinition" : {
      "post" : {
        "tags" : [ "Credential exchange" ],
        "summary" : "Returns the credentials that are required by the presentation definition but not found in the wallet",
        "parameters" : [ {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Presentation definition",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/id.walt.oid4vc.data.dif.PresentationDefinition"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "List<FilterData>",
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/id.walt.webwallet.usecase.exchange.FilterData"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/exchange/usePresentationRequest" : {
      "post" : {
        "tags" : [ "Credential exchange" ],
        "summary" : "Present credential(s) to a Relying Party",
        "parameters" : [ {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/id.walt.webwallet.web.controllers.exchange.UsePresentationRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Successfully presented credentials",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "JsonObject",
                  "type" : "object",
                  "additionalProperties" : {
                    "title" : "*",
                    "type" : "object"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Presentation was not accepted",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "JsonObject",
                  "type" : "object",
                  "additionalProperties" : {
                    "title" : "*",
                    "type" : "object"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/exchange/resolvePresentationRequest" : {
      "post" : {
        "tags" : [ "Credential exchange" ],
        "summary" : "Return resolved / parsed presentation request",
        "parameters" : [ {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "PresentationRequest to resolve/parse",
          "content" : {
            "text/plain" : {
              "schema" : {
                "title" : "String",
                "type" : "string"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "headers" : { },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "title" : "String",
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/exchange/resolveCredentialOffer" : {
      "post" : {
        "tags" : [ "Credential exchange" ],
        "summary" : "Return resolved / parsed credential offer",
        "parameters" : [ {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Credential offer request to resolve/parse",
          "content" : {
            "text/plain" : {
              "schema" : {
                "title" : "String",
                "type" : "string"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/id.walt.oid4vc.data.CredentialOffer"
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/exchange/resolveVctUrl" : {
      "get" : {
        "tags" : [ "Credential exchange" ],
        "summary" : "Receive an verifiable credential type (VCT) URL and return resolved vct object as described in IETF SD-JWT VC",
        "parameters" : [ {
          "name" : "vct",
          "in" : "query",
          "description" : "The value of the vct in URL format",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          },
          "example" : "https://example.com/mycustomvct"
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Resolved VCT",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/id.walt.sdjwt.SDJWTVCTypeMetadata"
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/history" : {
      "get" : {
        "tags" : [ "History" ],
        "summary" : "Show operation history",
        "parameters" : [ {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "List<WalletOperationHistory>",
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/id.walt.webwallet.db.models.WalletOperationHistory"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/issuers" : {
      "get" : {
        "tags" : [ "Issuers" ],
        "summary" : "List the configured issuers",
        "parameters" : [ {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of issuer objects",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "List<IssuerDataTransferObject>",
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/id.walt.webwallet.service.issuers.IssuerDataTransferObject"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/issuers/add" : {
      "post" : {
        "tags" : [ "Issuers" ],
        "summary" : "Add issuer to wallet",
        "parameters" : [ {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Issuer data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/id.walt.webwallet.web.controllers.IssuerParameter"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Issuer added successfully",
            "headers" : { }
          },
          "400" : {
            "description" : "Failed to add issuer to wallet",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/issuers/{issuer}" : {
      "get" : {
        "tags" : [ "Issuers" ],
        "summary" : "Fetch issuer data",
        "parameters" : [ {
          "name" : "issuer",
          "in" : "path",
          "description" : "The issuer name",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          },
          "example" : "walt.id"
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Issuer data object",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/id.walt.webwallet.service.issuers.IssuerDataTransferObject"
                }
              }
            }
          },
          "404" : {
            "description" : "Error message",
            "headers" : { },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "title" : "String",
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/issuers/{issuer}/authorize" : {
      "put" : {
        "tags" : [ "Issuers" ],
        "summary" : "Authorize issuer to automatically add credentials to the wallet in future",
        "parameters" : [ {
          "name" : "issuer",
          "in" : "path",
          "description" : "The issuer name",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          },
          "example" : "walt.id"
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Authorization succeed",
            "headers" : { }
          },
          "400" : {
            "description" : "Authorization failed",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/issuers/{issuer}/credentials" : {
      "get" : {
        "tags" : [ "Issuers" ],
        "summary" : "Show supported credentials for the given issuer",
        "parameters" : [ {
          "name" : "issuer",
          "in" : "path",
          "description" : "The issuer name",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          },
          "example" : "walt.id"
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of issuer credential objects",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "List<CredentialDataTransferObject>",
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/id.walt.webwallet.service.issuers.CredentialDataTransferObject"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Error message",
            "headers" : { },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "title" : "String",
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/eventlog" : {
      "get" : {
        "tags" : [ "Event Log" ],
        "summary" : "Retrieve event logs for currently signed in account wallet",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "Int",
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "List of key=value pairs for filtering",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "List<String>",
            "type" : "array",
            "items" : {
              "title" : "String",
              "type" : "string"
            }
          }
        }, {
          "name" : "startingAfter",
          "in" : "query",
          "description" : "Starting after page",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "The property to sort by",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "description" : "The sort order [ASC|DESC]",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          },
          "example" : "DESC"
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "*",
                  "type" : "object"
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/eventlog/{id}" : {
      "delete" : {
        "tags" : [ "Event Log" ],
        "summary" : "Delete event log",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Event log ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "Int",
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Event log deleted",
            "headers" : { }
          },
          "400" : {
            "description" : "Event log could not be deleted",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/manifest/{credentialId}" : {
      "get" : {
        "tags" : [ "WalletCredential manifest" ],
        "summary" : "Get credential manifest, if available, otherwise null",
        "parameters" : [ {
          "name" : "credentialId",
          "in" : "path",
          "description" : "Credential id",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "JsonObject",
                  "type" : "object",
                  "additionalProperties" : {
                    "title" : "*",
                    "type" : "object"
                  }
                }
              }
            }
          },
          "204" : {
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "JsonObject",
                  "type" : "object",
                  "additionalProperties" : {
                    "title" : "*",
                    "type" : "object"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/manifest/{credentialId}/display" : {
      "get" : {
        "tags" : [ "WalletCredential manifest" ],
        "summary" : "Get offer display info, if available, otherwise empty object",
        "parameters" : [ {
          "name" : "credentialId",
          "in" : "path",
          "description" : "Credential id",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "JsonObject",
                  "type" : "object",
                  "additionalProperties" : {
                    "title" : "*",
                    "type" : "object"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/manifest/{credentialId}/issuer" : {
      "get" : {
        "tags" : [ "WalletCredential manifest" ],
        "summary" : "Get offer issuer info, if available, otherwise empty object",
        "parameters" : [ {
          "name" : "credentialId",
          "in" : "path",
          "description" : "Credential id",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "JsonObject",
                  "type" : "object",
                  "additionalProperties" : {
                    "title" : "*",
                    "type" : "object"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/manifest/extract" : {
      "get" : {
        "tags" : [ "WalletCredential manifest" ],
        "summary" : "Extract manifest info from issuance request offer, if available, otherwise empty object",
        "parameters" : [ {
          "name" : "offer",
          "in" : "query",
          "description" : "Offer request URI",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "JsonObject",
                  "type" : "object",
                  "additionalProperties" : {
                    "title" : "*",
                    "type" : "object"
                  }
                }
              }
            }
          },
          "204" : {
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "JsonObject",
                  "type" : "object",
                  "additionalProperties" : {
                    "title" : "*",
                    "type" : "object"
                  }
                }
              }
            }
          },
          "400" : {
            "headers" : { },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "title" : "String",
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/categories" : {
      "get" : {
        "tags" : [ "WalletCategories" ],
        "summary" : "List categories",
        "parameters" : [ {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of categories",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "List<JsonObject>",
                  "type" : "array",
                  "items" : {
                    "title" : "JsonObject",
                    "type" : "object",
                    "additionalProperties" : {
                      "title" : "*",
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/categories/{name}/add" : {
      "post" : {
        "tags" : [ "WalletCategories" ],
        "summary" : "Add category",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "the category name",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Category added",
            "headers" : { }
          },
          "400" : {
            "description" : "Category could not be added",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/categories/{name}" : {
      "delete" : {
        "tags" : [ "WalletCategories" ],
        "summary" : "Delete category",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "the category name",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Category deleted",
            "headers" : { }
          },
          "400" : {
            "description" : "Category could not be deleted",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/categories/{name}/rename/{newName}" : {
      "put" : {
        "tags" : [ "WalletCategories" ],
        "summary" : "Rename category",
        "parameters" : [ {
          "name" : "newName",
          "in" : "path",
          "description" : "the category new name",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "the category name",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Category renamed",
            "headers" : { }
          },
          "400" : {
            "description" : "Category could not be renamed",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/reports/frequent/credentials" : {
      "get" : {
        "tags" : [ "WalletReports" ],
        "summary" : "Credentials",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The max number of items to return",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "Int",
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "List<WalletCredential>",
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/id.walt.webwallet.db.models.WalletCredential"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/wallet/{wallet}/settings" : {
      "get" : {
        "tags" : [ "Settings" ],
        "summary" : "Wallet settings",
        "parameters" : [ {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Wallet settings object",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/id.walt.webwallet.service.settings.WalletSetting"
                }
              }
            }
          },
          "400" : {
            "description" : "Error fetching wallet settings",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "Settings" ],
        "summary" : "Update wallet settings",
        "parameters" : [ {
          "name" : "wallet",
          "in" : "path",
          "description" : "Wallet ID",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Wallet setting object",
          "content" : {
            "application/json" : {
              "schema" : {
                "title" : "JsonObject",
                "type" : "object",
                "additionalProperties" : {
                  "title" : "*",
                  "type" : "object"
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Wallet settings updated successfully",
            "headers" : { }
          },
          "400" : {
            "description" : "Error updating wallet settings",
            "headers" : { }
          },
          "401" : {
            "description" : "Invalid authentication",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/registry" : {
      "get" : {
        "tags" : [ "DID Web Registry" ],
        "summary" : "List registered DIDs",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Array of (DID) strings",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "List<String>",
                  "type" : "array",
                  "items" : {
                    "title" : "String",
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/registry/{id}/did.json" : {
      "get" : {
        "tags" : [ "DID Web Registry" ],
        "summary" : "Show a specific DID",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "title" : "String",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The DID document",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "JsonObject",
                  "type" : "object",
                  "additionalProperties" : {
                    "title" : "*",
                    "type" : "object"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/wallet-api/util/parseMDoc" : {
      "post" : {
        "tags" : [ "Utilities" ],
        "summary" : "Parse MDOC document to JSON element",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "text/plain" : {
              "schema" : {
                "title" : "String",
                "type" : "string"
              },
              "examples" : {
                "Sample mdoc" : {
                  "value" : "a267646f6354797065756f72672e69736f2e31383031332e352e312e6d444c6c6973737565725369676e6564a26a6e616d65537061636573a1716f72672e69736f2e31383031332e352e3183d8185852a4686469676573744944006672616e646f6d50fce6b21d930b5b99fad34980ab06c8ee71656c656d656e744964656e7469666965726b66616d696c795f6e616d656c656c656d656e7456616c756563446f65d8185852a4686469676573744944016672616e646f6d5058daba0e58ae65726d9ba1aaa62256ee71656c656d656e744964656e7469666965726a676976656e5f6e616d656c656c656d656e7456616c7565644a6f686ed8185858a4686469676573744944026672616e646f6d5063fd5066277bce71963369771b78c1f671656c656d656e744964656e7469666965726a62697274685f646174656c656c656d656e7456616c75656a313938302d30312d30316a697373756572417574688443a10126a1182159014b308201473081eea003020102020839edc87a9a78f92a300a06082a8648ce3d04030230173115301306035504030c0c4d444f4320524f4f54204341301e170d3234303530323133313333305a170d3235303530323133313333305a301b3119301706035504030c104d444f432054657374204973737565723059301306072a8648ce3d020106082a8648ce3d030107034200041b4448341885fa84140f77790c69de810b977a7236f490da306a0cbe2a0a441379ddde146b36a44b6ba7bbc067b04b71bad4b692a4616013d893d440ae253781a320301e300c0603551d130101ff04023000300e0603551d0f0101ff040403020780300a06082a8648ce3d04030203480030450221008e70041000ddec2a230b2586ecc59f8acd156f5d933d9363bc5e2263bb0ab69802201885a8b537327a69b022620f07c5c45d6293b86eed927a3f04e82cc51cadf8635901c3d8185901bea66776657273696f6e63312e306f646967657374416c676f726974686d675348412d3235366c76616c756544696765737473a1716f72672e69736f2e31383031332e352e31a3005820ac6801aa40d9871db115c9ba804bbccbddf7f29a6773d626cb6604d468e8714e015820066fc7c19bce2aeaf2d655351da21dbb12561db212e21e8c3e969fa469fd1c7c025820dbf831a97d5b504ca70c212224109e243f01f82cb4cde7c704a7166fd671ed326d6465766963654b6579496e666fa1696465766963654b6579a4010220012158200f08fd91a6b62e757e090514cd54d506ea4fb4354e10cdaa24c7748f59fb5e10225820ffa4113b5aef1a4dbd3fb4b9da126bc1ffc09b9cc679b4673dd321f021f2fc2167646f6354797065756f72672e69736f2e31383031332e352e312e6d444c6c76616c6964697479496e666fa3667369676e6564c0781e323032342d30372d32355431333a30353a33312e3438333237373433355a6976616c696446726f6dc0781e323032342d30372d32355431333a30353a33312e3438333237373738305a6a76616c6964556e74696cc0781e323032352d30372d32355431333a30353a33312e3438333237373836335a5840d57ee4f1a38cf49860b2f9b7c8f2469faa68720a8b731eae1d727e681bf0299fe86c0c120407cc8f0a7b951a6db6eac4c1905f07436fc556be1a65c13e432490"
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "MDoc successfully parsed to JSON",
            "headers" : { }
          }
        },
        "deprecated" : false
      }
    }
  },
  "components" : {
    "schemas" : {
      "id.walt.commons.web.modules.FeatureFlagInformationModule.FeatureFlagInformation" : {
        "title" : "FeatureFlagInformation",
        "required" : [ "features", "total" ],
        "type" : "object",
        "properties" : {
          "features" : {
            "title" : "Map<String,String>",
            "type" : "object",
            "additionalProperties" : {
              "title" : "String",
              "type" : "string"
            }
          },
          "total" : {
            "title" : "Int",
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "id.walt.commons.web.modules.FeatureFlagInformationModule.FeatureFlagInformations" : {
        "title" : "FeatureFlagInformations",
        "required" : [ "defaulted", "disabled", "enabled" ],
        "type" : "object",
        "properties" : {
          "defaulted" : {
            "$ref" : "#/components/schemas/id.walt.commons.web.modules.FeatureFlagInformationModule.FeatureFlagInformation"
          },
          "disabled" : {
            "$ref" : "#/components/schemas/id.walt.commons.web.modules.FeatureFlagInformationModule.FeatureFlagInformation"
          },
          "enabled" : {
            "$ref" : "#/components/schemas/id.walt.commons.web.modules.FeatureFlagInformationModule.FeatureFlagInformation"
          }
        }
      },
      "kotlinx.datetime.Instant" : {
        "title" : "Instant",
        "required" : [ "epochSeconds", "nanosecondsOfSecond" ],
        "type" : "object",
        "properties" : {
          "epochSeconds" : {
            "title" : "Long",
            "type" : "integer",
            "format" : "int64"
          },
          "nanosecondsOfSecond" : {
            "title" : "Int",
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "kotlin.uuid.Uuid" : {
        "title" : "Uuid",
        "type" : "object",
        "properties" : { }
      },
      "id.walt.webwallet.db.models.Account" : {
        "title" : "Account",
        "required" : [ "createdOn", "id" ],
        "type" : "object",
        "properties" : {
          "createdOn" : {
            "$ref" : "#/components/schemas/kotlinx.datetime.Instant"
          },
          "email" : {
            "title" : "String",
            "type" : "string"
          },
          "id" : {
            "$ref" : "#/components/schemas/kotlin.uuid.Uuid"
          },
          "name" : {
            "title" : "String",
            "type" : "string"
          },
          "tenant" : {
            "title" : "String",
            "type" : "string"
          },
          "updatePasswordTo" : {
            "title" : "String",
            "type" : "string"
          }
        }
      },
      "id.walt.webwallet.web.model.AddressAccountRequest" : {
        "title" : "AddressAccountRequest",
        "required" : [ "address", "ecosystem" ],
        "type" : "object",
        "properties" : {
          "address" : {
            "title" : "String",
            "type" : "string"
          },
          "ecosystem" : {
            "title" : "String",
            "type" : "string"
          },
          "name" : {
            "title" : "String",
            "type" : "string"
          }
        }
      },
      "id.walt.webwallet.web.model.EmailAccountRequest" : {
        "title" : "EmailAccountRequest",
        "required" : [ "email", "password" ],
        "type" : "object",
        "properties" : {
          "email" : {
            "title" : "String",
            "type" : "string"
          },
          "name" : {
            "title" : "String",
            "type" : "string"
          },
          "password" : {
            "title" : "String",
            "type" : "string"
          }
        }
      },
      "id.walt.webwallet.web.model.KeycloakAccountRequest" : {
        "title" : "KeycloakAccountRequest",
        "type" : "object",
        "properties" : {
          "email" : {
            "title" : "String",
            "type" : "string"
          },
          "name" : {
            "title" : "String",
            "type" : "string"
          },
          "password" : {
            "title" : "String",
            "type" : "string"
          },
          "token" : {
            "title" : "String",
            "type" : "string"
          },
          "username" : {
            "title" : "String",
            "type" : "string"
          }
        }
      },
      "id.walt.webwallet.web.model.OidcAccountRequest" : {
        "title" : "OidcAccountRequest",
        "required" : [ "token" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "title" : "String",
            "type" : "string"
          },
          "token" : {
            "title" : "String",
            "type" : "string"
          }
        }
      },
      "id.walt.webwallet.web.model.OidcUniqueSubjectRequest" : {
        "title" : "OidcUniqueSubjectRequest",
        "required" : [ "token" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "title" : "String",
            "type" : "string"
          },
          "token" : {
            "title" : "String",
            "type" : "string"
          }
        }
      },
      "id.walt.webwallet.web.model.X5CAccountRequest" : {
        "title" : "X5CAccountRequest",
        "required" : [ "token" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "title" : "String",
            "type" : "string"
          },
          "token" : {
            "title" : "String",
            "type" : "string"
          }
        }
      },
      "id.walt.webwallet.web.model.AccountRequest" : {
        "title" : "AccountRequest",
        "anyOf" : [ {
          "$ref" : "#/components/schemas/id.walt.webwallet.web.model.AddressAccountRequest"
        }, {
          "$ref" : "#/components/schemas/id.walt.webwallet.web.model.EmailAccountRequest"
        }, {
          "$ref" : "#/components/schemas/id.walt.webwallet.web.model.KeycloakAccountRequest"
        }, {
          "$ref" : "#/components/schemas/id.walt.webwallet.web.model.OidcAccountRequest"
        }, {
          "$ref" : "#/components/schemas/id.walt.webwallet.web.model.OidcUniqueSubjectRequest"
        }, {
          "$ref" : "#/components/schemas/id.walt.webwallet.web.model.X5CAccountRequest"
        } ]
      },
      "id.walt.webwallet.web.model.KeycloakLogoutRequest" : {
        "title" : "KeycloakLogoutRequest",
        "type" : "object",
        "properties" : {
          "keycloakUserId" : {
            "title" : "String",
            "type" : "string"
          },
          "token" : {
            "title" : "String",
            "type" : "string"
          }
        }
      },
      "id.walt.webwallet.db.models.AccountWalletListing.WalletListing" : {
        "title" : "WalletListing",
        "required" : [ "addedOn", "createdOn", "id", "name", "permission" ],
        "type" : "object",
        "properties" : {
          "addedOn" : {
            "$ref" : "#/components/schemas/kotlinx.datetime.Instant"
          },
          "createdOn" : {
            "$ref" : "#/components/schemas/kotlinx.datetime.Instant"
          },
          "id" : {
            "$ref" : "#/components/schemas/kotlin.uuid.Uuid"
          },
          "name" : {
            "title" : "String",
            "type" : "string"
          },
          "permission" : {
            "$ref" : "#/components/schemas/id.walt.webwallet.db.models.AccountWalletPermissions"
          }
        }
      },
      "id.walt.webwallet.db.models.AccountWalletPermissions" : {
        "title" : "AccountWalletPermissions",
        "enum" : [ "ADMINISTRATE", "USE", "READ_ONLY" ]
      },
      "id.walt.webwallet.db.models.AccountWalletListing" : {
        "title" : "AccountWalletListing",
        "required" : [ "account", "wallets" ],
        "type" : "object",
        "properties" : {
          "account" : {
            "$ref" : "#/components/schemas/kotlin.uuid.Uuid"
          },
          "wallets" : {
            "title" : "List<WalletListing>",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/id.walt.webwallet.db.models.AccountWalletListing.WalletListing"
            }
          }
        }
      },
      "id.walt.crypto.keys.KeyType" : {
        "title" : "KeyType",
        "enum" : [ "Ed25519", "secp256k1", "secp256r1", "RSA" ]
      },
      "id.walt.crypto.keys.KeyGenerationRequest" : {
        "title" : "KeyGenerationRequest",
        "required" : [ "backend", "keyType" ],
        "type" : "object",
        "properties" : {
          "backend" : {
            "title" : "String",
            "type" : "string"
          },
          "config" : {
            "title" : "JsonObject",
            "type" : "object",
            "additionalProperties" : {
              "title" : "*",
              "type" : "object"
            }
          },
          "keyType" : {
            "$ref" : "#/components/schemas/id.walt.crypto.keys.KeyType"
          }
        }
      },
      "id.walt.webwallet.db.models.WalletDid" : {
        "title" : "WalletDid",
        "required" : [ "alias", "createdOn", "default", "did", "document", "keyId" ],
        "type" : "object",
        "properties" : {
          "alias" : {
            "title" : "String",
            "type" : "string"
          },
          "createdOn" : {
            "$ref" : "#/components/schemas/kotlinx.datetime.Instant"
          },
          "default" : {
            "title" : "Boolean",
            "type" : "boolean"
          },
          "did" : {
            "title" : "String",
            "type" : "string"
          },
          "document" : {
            "title" : "String",
            "type" : "string"
          },
          "keyId" : {
            "title" : "String",
            "type" : "string"
          }
        }
      },
      "id.walt.webwallet.db.models.WalletCredential" : {
        "title" : "WalletCredential",
        "required" : [ "addedOn", "format", "pending", "wallet" ],
        "type" : "object",
        "properties" : {
          "addedOn" : {
            "$ref" : "#/components/schemas/kotlinx.datetime.Instant"
          },
          "deletedOn" : {
            "$ref" : "#/components/schemas/kotlinx.datetime.Instant"
          },
          "disclosures" : {
            "title" : "String",
            "type" : "string"
          },
          "document" : {
            "title" : "String",
            "type" : "string"
          },
          "format" : {
            "$ref" : "#/components/schemas/id.walt.oid4vc.data.CredentialFormat"
          },
          "id" : {
            "title" : "String",
            "type" : "string"
          },
          "manifest" : {
            "title" : "String",
            "type" : "string"
          },
          "parsedDocument" : {
            "title" : "JsonObject",
            "type" : "object",
            "additionalProperties" : {
              "title" : "*",
              "type" : "object"
            }
          },
          "parsedManifest" : {
            "title" : "JsonObject",
            "type" : "object",
            "additionalProperties" : {
              "title" : "*",
              "type" : "object"
            }
          },
          "pending" : {
            "title" : "Boolean",
            "type" : "boolean"
          },
          "wallet" : {
            "$ref" : "#/components/schemas/kotlin.uuid.Uuid"
          }
        }
      },
      "id.walt.oid4vc.data.CredentialFormat" : {
        "title" : "CredentialFormat",
        "enum" : [ "jwt_vc_json", "jwt_vc_json_ld", "ldp_vc", "sd_jwt_vc", "mso_mdoc", "jwt_vp_json", "jwt_vp_json_ld", "ldp_vp", "jwt_vc", "jwt_vp" ]
      },
      "id.walt.webwallet.web.parameter.NoteRequestParameter" : {
        "title" : "NoteRequestParameter",
        "required" : [ "note" ],
        "type" : "object",
        "properties" : {
          "note" : {
            "title" : "String",
            "type" : "string"
          }
        }
      },
      "id.walt.webwallet.usecase.credential.CredentialStatusResult" : {
        "title" : "CredentialStatusResult",
        "required" : [ "message", "result", "type" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "title" : "String",
            "type" : "string"
          },
          "result" : {
            "title" : "Boolean",
            "type" : "boolean"
          },
          "type" : {
            "title" : "String",
            "type" : "string"
          }
        }
      },
      "kotlinx.serialization.json.JsonElement" : {
        "title" : "JsonElement",
        "anyOf" : [ {
          "title" : "JsonArray",
          "type" : "array",
          "items" : {
            "title" : "*",
            "type" : "object"
          }
        }, {
          "title" : "JsonObject",
          "type" : "object",
          "additionalProperties" : {
            "title" : "*",
            "type" : "object"
          }
        }, {
          "$ref" : "#/components/schemas/kotlinx.serialization.json.JsonPrimitive"
        } ]
      },
      "kotlinx.serialization.json.JsonPrimitive" : {
        "title" : "JsonPrimitive",
        "anyOf" : [ {
          "$ref" : "#/components/schemas/kotlinx.serialization.json.JsonLiteral"
        }, {
          "$ref" : "#/components/schemas/kotlinx.serialization.json.JsonNull"
        } ]
      },
      "kotlinx.serialization.json.JsonLiteral" : {
        "title" : "JsonLiteral",
        "required" : [ "content", "isString" ],
        "type" : "object",
        "properties" : {
          "content" : {
            "title" : "String",
            "type" : "string"
          },
          "isString" : {
            "title" : "Boolean",
            "type" : "boolean"
          }
        }
      },
      "kotlinx.serialization.json.JsonNull" : {
        "title" : "JsonNull",
        "required" : [ "content", "isString" ],
        "type" : "object",
        "properties" : {
          "isString" : {
            "title" : "Boolean",
            "type" : "boolean"
          },
          "content" : {
            "title" : "String",
            "type" : "string"
          }
        }
      },
      "id.walt.oid4vc.data.dif.VCFormatDefinition" : {
        "title" : "VCFormatDefinition",
        "required" : [ "customParameters" ],
        "type" : "object",
        "properties" : {
          "alg" : {
            "title" : "Set<String>",
            "type" : "array",
            "items" : {
              "title" : "String",
              "type" : "string"
            }
          },
          "customParameters" : {
            "title" : "Map<String,JsonElement>",
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/kotlinx.serialization.json.JsonElement"
            }
          },
          "proof_type" : {
            "title" : "Set<String>",
            "type" : "array",
            "items" : {
              "title" : "String",
              "type" : "string"
            }
          }
        }
      },
      "id.walt.oid4vc.data.dif.InputDescriptor" : {
        "title" : "InputDescriptor",
        "required" : [ "customParameters", "id" ],
        "type" : "object",
        "properties" : {
          "constraints" : {
            "$ref" : "#/components/schemas/id.walt.oid4vc.data.dif.InputDescriptorConstraints"
          },
          "customParameters" : {
            "title" : "Map<String,JsonElement>",
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/kotlinx.serialization.json.JsonElement"
            }
          },
          "format" : {
            "title" : "Map<VCFormat,VCFormatDefinition>",
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/id.walt.oid4vc.data.dif.VCFormatDefinition"
            }
          },
          "group" : {
            "title" : "Set<String>",
            "type" : "array",
            "items" : {
              "title" : "String",
              "type" : "string"
            }
          },
          "id" : {
            "title" : "String",
            "type" : "string"
          },
          "name" : {
            "title" : "String",
            "type" : "string"
          },
          "purpose" : {
            "title" : "String",
            "type" : "string"
          },
          "schema" : {
            "title" : "List<InputDescriptorSchema>",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/id.walt.oid4vc.data.dif.InputDescriptorSchema"
            }
          }
        }
      },
      "id.walt.oid4vc.data.dif.InputDescriptorConstraints" : {
        "title" : "InputDescriptorConstraints",
        "required" : [ "customParameters" ],
        "type" : "object",
        "properties" : {
          "customParameters" : {
            "title" : "Map<String,JsonElement>",
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/kotlinx.serialization.json.JsonElement"
            }
          },
          "fields" : {
            "title" : "List<InputDescriptorField>",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/id.walt.oid4vc.data.dif.InputDescriptorField"
            }
          },
          "limitDisclosure" : {
            "$ref" : "#/components/schemas/id.walt.oid4vc.data.dif.DisclosureLimitation"
          }
        }
      },
      "id.walt.oid4vc.data.dif.InputDescriptorField" : {
        "title" : "InputDescriptorField",
        "required" : [ "customParameters", "path" ],
        "type" : "object",
        "properties" : {
          "customParameters" : {
            "title" : "Map<String,JsonElement>",
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/kotlinx.serialization.json.JsonElement"
            }
          },
          "filter" : {
            "title" : "JsonObject",
            "type" : "object",
            "additionalProperties" : {
              "title" : "*",
              "type" : "object"
            }
          },
          "id" : {
            "title" : "String",
            "type" : "string"
          },
          "intentToRetain" : {
            "title" : "Boolean",
            "type" : "boolean"
          },
          "name" : {
            "title" : "String",
            "type" : "string"
          },
          "optional" : {
            "title" : "Boolean",
            "type" : "boolean"
          },
          "path" : {
            "title" : "List<String>",
            "type" : "array",
            "items" : {
              "title" : "String",
              "type" : "string"
            }
          },
          "purpose" : {
            "title" : "String",
            "type" : "string"
          }
        }
      },
      "id.walt.oid4vc.data.dif.DisclosureLimitation" : {
        "title" : "DisclosureLimitation",
        "enum" : [ "required", "preferred" ]
      },
      "id.walt.oid4vc.data.dif.InputDescriptorSchema" : {
        "title" : "InputDescriptorSchema",
        "required" : [ "customParameters", "uri" ],
        "type" : "object",
        "properties" : {
          "customParameters" : {
            "title" : "Map<String,JsonElement>",
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/kotlinx.serialization.json.JsonElement"
            }
          },
          "uri" : {
            "title" : "String",
            "type" : "string"
          }
        }
      },
      "id.walt.oid4vc.data.dif.SubmissionRequirement" : {
        "title" : "SubmissionRequirement",
        "required" : [ "customParameters", "rule" ],
        "type" : "object",
        "properties" : {
          "count" : {
            "title" : "Int",
            "type" : "integer",
            "format" : "int32"
          },
          "customParameters" : {
            "title" : "Map<String,JsonElement>",
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/kotlinx.serialization.json.JsonElement"
            }
          },
          "from" : {
            "title" : "String",
            "type" : "string"
          },
          "fromNested" : {
            "title" : "List<SubmissionRequirement>",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/id.walt.oid4vc.data.dif.SubmissionRequirement"
            }
          },
          "max" : {
            "title" : "Int",
            "type" : "integer",
            "format" : "int32"
          },
          "min" : {
            "title" : "Int",
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "title" : "String",
            "type" : "string"
          },
          "purpose" : {
            "title" : "String",
            "type" : "string"
          },
          "rule" : {
            "$ref" : "#/components/schemas/id.walt.oid4vc.data.dif.SubmissionRequirementRule"
          }
        }
      },
      "id.walt.oid4vc.data.dif.SubmissionRequirementRule" : {
        "title" : "SubmissionRequirementRule",
        "enum" : [ "pick", "all" ]
      },
      "id.walt.oid4vc.data.dif.PresentationDefinition" : {
        "title" : "PresentationDefinition",
        "required" : [ "customParameters", "id", "inputDescriptors" ],
        "type" : "object",
        "properties" : {
          "customParameters" : {
            "title" : "Map<String,JsonElement>",
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/kotlinx.serialization.json.JsonElement"
            }
          },
          "format" : {
            "title" : "Map<VCFormat,VCFormatDefinition>",
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/id.walt.oid4vc.data.dif.VCFormatDefinition"
            }
          },
          "id" : {
            "title" : "String",
            "type" : "string"
          },
          "inputDescriptors" : {
            "title" : "List<InputDescriptor>",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/id.walt.oid4vc.data.dif.InputDescriptor"
            }
          },
          "name" : {
            "title" : "String",
            "type" : "string"
          },
          "purpose" : {
            "title" : "String",
            "type" : "string"
          },
          "submissionRequirements" : {
            "title" : "List<SubmissionRequirement>",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/id.walt.oid4vc.data.dif.SubmissionRequirement"
            }
          }
        }
      },
      "id.walt.webwallet.usecase.exchange.FilterData" : {
        "title" : "FilterData",
        "required" : [ "credential", "filters" ],
        "type" : "object",
        "properties" : {
          "credential" : {
            "title" : "String",
            "type" : "string"
          },
          "filters" : {
            "title" : "List<TypeFilter>",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/id.walt.webwallet.usecase.exchange.TypeFilter"
            }
          }
        }
      },
      "id.walt.webwallet.usecase.exchange.TypeFilter" : {
        "title" : "TypeFilter",
        "required" : [ "path", "pattern" ],
        "type" : "object",
        "properties" : {
          "path" : {
            "title" : "List<String>",
            "type" : "array",
            "items" : {
              "title" : "String",
              "type" : "string"
            }
          },
          "pattern" : {
            "title" : "String",
            "type" : "string"
          },
          "type" : {
            "title" : "String",
            "type" : "string"
          }
        }
      },
      "id.walt.webwallet.web.controllers.exchange.UsePresentationRequest" : {
        "title" : "UsePresentationRequest",
        "required" : [ "selectedCredentials" ],
        "type" : "object",
        "properties" : {
          "did" : {
            "title" : "String",
            "type" : "string"
          },
          "disclosures" : {
            "title" : "Map<String,List<String>>",
            "type" : "object",
            "additionalProperties" : {
              "title" : "List<String>",
              "type" : "array",
              "items" : {
                "title" : "String",
                "type" : "string"
              }
            }
          },
          "note" : {
            "title" : "String",
            "type" : "string"
          },
          "presentationRequest" : {
            "title" : "String",
            "type" : "string"
          },
          "selectedCredentials" : {
            "title" : "List<String>",
            "type" : "array",
            "items" : {
              "title" : "String",
              "type" : "string"
            }
          }
        }
      },
      "id.walt.oid4vc.data.GrantDetails" : {
        "title" : "GrantDetails",
        "type" : "object",
        "properties" : {
          "authorizationServer" : {
            "title" : "String",
            "type" : "string"
          },
          "interval" : {
            "title" : "Int",
            "type" : "integer",
            "format" : "int32"
          },
          "issuerState" : {
            "title" : "String",
            "type" : "string"
          },
          "preAuthorizedCode" : {
            "title" : "String",
            "type" : "string"
          },
          "txCode" : {
            "$ref" : "#/components/schemas/id.walt.oid4vc.data.TxCode"
          }
        }
      },
      "id.walt.oid4vc.data.TxCode" : {
        "title" : "TxCode",
        "type" : "object",
        "properties" : {
          "description" : {
            "title" : "String",
            "type" : "string"
          },
          "inputMode" : {
            "$ref" : "#/components/schemas/id.walt.oid4vc.data.TxInputMode"
          },
          "length" : {
            "title" : "Int",
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "id.walt.oid4vc.data.TxInputMode" : {
        "title" : "TxInputMode",
        "enum" : [ "numeric", "text" ]
      },
      "id.walt.oid4vc.data.CredentialOffer" : {
        "title" : "CredentialOffer",
        "required" : [ "credentialConfigurationIds", "credentialIssuer", "customParameters", "grants" ],
        "type" : "object",
        "properties" : {
          "credentialConfigurationIds" : {
            "title" : "Set<String>",
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "title" : "String",
              "type" : "string"
            }
          },
          "credentialIssuer" : {
            "title" : "String",
            "type" : "string"
          },
          "customParameters" : {
            "title" : "Map<String,JsonElement>",
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/kotlinx.serialization.json.JsonElement"
            }
          },
          "grants" : {
            "title" : "Map<String,GrantDetails>",
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/id.walt.oid4vc.data.GrantDetails"
            }
          }
        }
      },
      "id.walt.sdjwt.SDJWTVCTypeMetadata" : {
        "title" : "SDJWTVCTypeMetadata",
        "required" : [ "customParameters", "vct" ],
        "type" : "object",
        "properties" : {
          "customParameters" : {
            "title" : "Map<String,JsonElement>",
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/kotlinx.serialization.json.JsonElement"
            }
          },
          "description" : {
            "title" : "String",
            "type" : "string"
          },
          "extends" : {
            "title" : "String",
            "type" : "string"
          },
          "extendsIntegrity" : {
            "title" : "String",
            "type" : "string"
          },
          "name" : {
            "title" : "String",
            "type" : "string"
          },
          "schema" : {
            "title" : "JsonObject",
            "type" : "object",
            "additionalProperties" : {
              "title" : "*",
              "type" : "object"
            }
          },
          "schemaIntegrity" : {
            "title" : "String",
            "type" : "string"
          },
          "schemaUri" : {
            "title" : "String",
            "type" : "string"
          },
          "schemaUriIntegrity" : {
            "title" : "String",
            "type" : "string"
          },
          "vct" : {
            "title" : "String",
            "type" : "string"
          },
          "vctIntegrity" : {
            "title" : "String",
            "type" : "string"
          }
        }
      },
      "id.walt.webwallet.db.models.WalletOperationHistory" : {
        "title" : "WalletOperationHistory",
        "required" : [ "account", "data", "operation", "tenant", "timestamp", "wallet" ],
        "type" : "object",
        "properties" : {
          "account" : {
            "$ref" : "#/components/schemas/kotlin.uuid.Uuid"
          },
          "data" : {
            "title" : "JsonObject",
            "type" : "object",
            "additionalProperties" : {
              "title" : "*",
              "type" : "object"
            }
          },
          "id" : {
            "$ref" : "#/components/schemas/kotlin.uuid.Uuid"
          },
          "operation" : {
            "title" : "String",
            "type" : "string"
          },
          "tenant" : {
            "title" : "String",
            "type" : "string"
          },
          "timestamp" : {
            "$ref" : "#/components/schemas/kotlinx.datetime.Instant"
          },
          "wallet" : {
            "$ref" : "#/components/schemas/kotlin.uuid.Uuid"
          }
        }
      },
      "id.walt.webwallet.service.issuers.IssuerDataTransferObject" : {
        "title" : "IssuerDataTransferObject",
        "required" : [ "authorized", "configurationEndpoint", "did", "uiEndpoint", "wallet" ],
        "type" : "object",
        "properties" : {
          "authorized" : {
            "title" : "Boolean",
            "type" : "boolean"
          },
          "configurationEndpoint" : {
            "title" : "String",
            "type" : "string"
          },
          "description" : {
            "title" : "String",
            "type" : "string"
          },
          "did" : {
            "title" : "String",
            "type" : "string"
          },
          "uiEndpoint" : {
            "title" : "String",
            "type" : "string"
          },
          "wallet" : {
            "$ref" : "#/components/schemas/kotlin.uuid.Uuid"
          }
        }
      },
      "id.walt.webwallet.web.controllers.IssuerParameter" : {
        "title" : "IssuerParameter",
        "required" : [ "configurationEndpoint", "name", "uiEndpoint" ],
        "type" : "object",
        "properties" : {
          "configurationEndpoint" : {
            "title" : "String",
            "type" : "string"
          },
          "description" : {
            "title" : "String",
            "type" : "string"
          },
          "name" : {
            "title" : "String",
            "type" : "string"
          },
          "uiEndpoint" : {
            "title" : "String",
            "type" : "string"
          }
        }
      },
      "id.walt.webwallet.service.issuers.CredentialDataTransferObject" : {
        "title" : "CredentialDataTransferObject",
        "required" : [ "format", "id", "types" ],
        "type" : "object",
        "properties" : {
          "format" : {
            "title" : "String",
            "type" : "string"
          },
          "id" : {
            "title" : "String",
            "type" : "string"
          },
          "types" : {
            "title" : "List<String>",
            "type" : "array",
            "items" : {
              "title" : "String",
              "type" : "string"
            }
          }
        }
      },
      "id.walt.webwallet.service.settings.WalletSetting" : {
        "title" : "WalletSetting",
        "required" : [ "settings" ],
        "type" : "object",
        "properties" : {
          "settings" : {
            "title" : "JsonObject",
            "type" : "object",
            "additionalProperties" : {
              "title" : "*",
              "type" : "object"
            }
          }
        }
      }
    },
    "examples" : {
      "Uuid" : {
        "value" : "12345678-abcd-9876-efgh-543210123456"
      },
      "Instant" : {
        "value" : "2024-11-24T18:36:16.600794861Z"
      }
    },
    "securitySchemes" : {
      "auth-session" : {
        "type" : "apiKey",
        "name" : "Session-Cookie Authentication",
        "in" : "cookie"
      },
      "auth-bearer" : {
        "type" : "http",
        "description" : "Set as \"Authorization: Bearer %token-here%\" to authenticate.",
        "scheme" : "bearer"
      },
      "auth-bearer-alternative" : {
        "type" : "http",
        "description" : "Set alternative header \"waltid-authorization: Bearer %token-here%\" to authenticate.",
        "in" : "header",
        "scheme" : "bearer"
      }
    }
  }
}